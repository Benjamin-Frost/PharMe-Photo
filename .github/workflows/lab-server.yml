name: Lab Server

on:
  push:
    paths:
      - ".github/workflows/lab-server.yml"
      - "lab-server/**"
  pull_request:
    paths:
      - ".github/workflows/lab-server.yml"
      - "lab-server/**"

defaults:
  run:
    working-directory: ./lab-server

env:
  KEYCLOAK_AUTH_SERVER_URL: ${{ secrets.KEYCLOAK_AUTH_SERVER_URL }}
  KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
  KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
  KEYCLOAK_SECRET: ${{ secrets.KEYCLOAK_SECRET }}

  LAB_SERVER_DB_HOST: postgres
  LAB_SERVER_DB_PORT: 6543
  LAB_SERVER_DB_USER: postgres
  LAB_SERVER_DB_PASS: postgres
  LAB_SERVER_DB_NAME: lab_server_db

  MINIO_PORT: 9000
  MINIO_ENDPOINT: minio
  MINIO_ROOT_USER: admin_minio
  MINIO_ROOT_PASSWORD: admin_minio

jobs:
  lint:
    name: Lint
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn lint


  get-runner-metadata:
    name: Get Runner Metadata
    runs-on: [self-hosted, linux]
    outputs:
      uid: ${{ steps.get-uid.outputs.uid }}
    steps:
      - run: echo "::set-output name=uid::$(id -u)"
        id: get-uid

  test-e2e:
    name: Test E2E
    runs-on: [self-hosted, linux]
    needs: [get-runner-metadata]
    container:
      image: node:17-buster-slim
      options: --user ${{ needs.get-runner-metadata.outputs.uid }}
    services:
      minio:
        # we refrain from using the official minio image as we would need to
        # pass an additional `server` sub-command to the container. Currently,
        # GH-actions does not support this. Note that this is not an official
        # minio image and should therefore not be used in production
        # environments. See: https://stackoverflow.com/questions/60849745/
        image: bitnami/minio
        ports:
          - 9000:9000
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.LAB_SERVER_DB_USER }}
          POSTGRES_PASSWORD: ${{ env.LAB_SERVER_DB_PASS }}
          POSTGRES_DB: ${{ env.LAB_SERVER_DB_NAME }}
        ports:
          - 6789:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn seed:run
      - run: yarn test:e2e:cov
        env:
          LAB_SERVER_DB_PORT: ${{ job.services.postgres.ports[6789] }}
          MINIO_PORT: ${{ job.services.minio.ports[9000] }}
      - uses: actions/upload-artifact@v3
        with:
          name: jest-coverage
          path: ./lab-server/coverage/coverage-summary.json

  build:
    name: Build
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn build

  deploy:
    name: Deploy
    needs: [lint, test-e2e, build]
    runs-on: [self-hosted, linux]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            git fetch origin main
            git reset --hard origin/main
            cd lab-server
            docker-compose --profile production up --build --force-recreate --no-deps -d

  update-jest-badges:
    name: Update Jest Badges
    needs: [test-e2e]
    runs-on: [self-hosted, linux]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: jest-coverage
          path: ./coverage # Library required storing artificat in this specific directory
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Generate Jest Badges
        uses: ./other/jest-badges-generator
        with:
          branch-name: ${{ steps.extract_branch.outputs.branch }}
          jest-summary-path: ${{steps.download.outputs.download-path}}/coverage-summary.json
          badge-output-dir: ./badges/lab-server
